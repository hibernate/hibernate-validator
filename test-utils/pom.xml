<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Hibernate Validator, declare and validate application constraints
  ~
  ~ License: Apache License, Version 2.0
  ~ See the license.txt file in the root directory or <http://www.apache.org/licenses/LICENSE-2.0>.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.hibernate.validator</groupId>
        <artifactId>hibernate-validator-parent</artifactId>
        <version>8.0.3-SNAPSHOT</version>
    </parent>
    <artifactId>hibernate-validator-test-utils</artifactId>

    <name>Hibernate Validator Test Utils</name>
    <description>Set of test utilities that can help testing custom constraints.</description>

    <properties>
        <hibernate-validator-parent.path>..</hibernate-validator-parent.path>
        <automatic.module.name>org.hibernate.validator.testutils</automatic.module.name>
        <maven.javadoc.skip>false</maven.javadoc.skip>
        <deploy.skip>false</deploy.skip>
    </properties>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-checkstyle-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>de.thetaphi</groupId>
                <artifactId>forbiddenapis</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <executions>
                    <execution>
                        <id>default-jar</id>
                        <phase>package</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <configuration>
                            <archive>
                                <manifestEntries>
                                    <Automatic-Module-Name>${automatic.module.name}</Automatic-Module-Name>
                                </manifestEntries>
                            </archive>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>jakarta.validation</groupId>
            <artifactId>jakarta.validation-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>dist</id>
            <activation>
                <property>
                    <name>disableDistributionBuild</name>
                    <value>!true</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>unpack-dependencies-javadoc-packagelists</id>
                                <phase>${javadoc.download.phase}</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>${project.groupId}</groupId>
                                            <artifactId>hibernate-validator-build-config</artifactId>
                                            <classifier>dependencies-javadoc-packagelists</classifier>
                                            <type>zip</type>
                                            <version>${project.version}</version>
                                        </artifactItem>
                                    </artifactItems>
                                    <outputDirectory>${javadoc.packagelists.directory}</outputDirectory>
                                    <overWriteSnapshots>true</overWriteSnapshots>
                                </configuration>
                            </execution>
                        </executions>
                        <dependencies>
                            <!--
                                This ensures that using mvn install -pl <some project> -am
                                will correctly force the build of the build-config module.
                             -->
                            <dependency>
                                <groupId>${project.groupId}</groupId>
                                <artifactId>hibernate-validator-build-config</artifactId>
                                <classifier>dependencies-javadoc-packagelists</classifier>
                                <type>zip</type>
                                <version>${project.version}</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                    <plugin>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>generate-javadoc</id>
                                <goals>
                                    <goal>javadoc-no-fork</goal>
                                </goals>
                                <phase>process-resources</phase>
                            </execution>
                            <execution>
                                <!--
                                    This is the default name of an execution that is added automatically if release profile is enabled.
                                    We want to "override" it so that we can control when it is actually executed.
                                 -->
                                <id>attach-javadocs</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                                <phase>${javadoc.generate.jar.phase}</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
