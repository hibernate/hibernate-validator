<?xml version="1.0" encoding="UTF-8"?>
<!--
    SPDX-License-Identifier: Apache-2.0
    Copyright Red Hat Inc. and Hibernate Authors
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.hibernate.validator</groupId>
        <artifactId>hibernate-validator-internal-parent</artifactId>
        <version>9.0.2-SNAPSHOT</version>
        <relativePath>../parents/internal/pom.xml</relativePath>
    </parent>

    <artifactId>hibernate-validator-documentation</artifactId>
    <packaging>jar</packaging>

    <name>Hibernate Validator Manual</name>
    <description>The Hibernate Validator reference manual</description>

    <properties>
        <asciidoctor.base-output-dir>${project.build.directory}/asciidoctor/en-US</asciidoctor.base-output-dir>
        <asciidoctor.theme-dir>${project.build.directory}/hibernate-asciidoctor-theme/asciidoc</asciidoctor.theme-dir>
        <asciidoctor.aggregated-resources-dir>${project.build.directory}/aggregated-resources</asciidoctor.aggregated-resources-dir>
        <asciidoctor.examples-source-dir>${basedir}/src/test/java</asciidoctor.examples-source-dir>
        <asciidoctor.examples-resources-dir>${basedir}/src/test/resources</asciidoctor.examples-resources-dir>
        <asciidoctor.engine-source-dir>${basedir}/../engine/src/main/java</asciidoctor.engine-source-dir>

        <html.meta.project-key>validator</html.meta.project-key>
        <html.outdated-content.project-key>${html.meta.project-key}</html.outdated-content.project-key>

        <surefire.jvm.args.additional>-Duser.language=en -Duser.country=US</surefire.jvm.args.additional>

        <forbiddenapis-junit.path>forbidden-allow-junit.txt</forbiddenapis-junit.path>
        <hibernate-validator-parent.path>..</hibernate-validator-parent.path>
    </properties>

    <dependencies>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>hibernate-validator</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.expressly</groupId>
            <artifactId>expressly</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>hibernate-validator-cdi</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>hibernate-validator-test-utils</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.enterprise</groupId>
            <artifactId>jakarta.enterprise.cdi-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.inject</groupId>
            <artifactId>jakarta.inject-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.groovy</groupId>
            <artifactId>groovy-jsr223</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-expression</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <!-- We exclude this dependency from the classpath when running tests with OracleJDK 8,
                 because OracleJDK 8 already bundles JavaFX. -->
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-base</artifactId>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- Only use assertj when strictly necessary in the documentation tests -->
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.annotation</groupId>
            <artifactId>jakarta.annotation-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-asciidoc-theme-to-aggregated-resources</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource>
                                    <directory>${asciidoctor.theme-dir}</directory>
                                </resource>
                            </resources>
                            <outputDirectory>${asciidoctor.aggregated-resources-dir}</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-local-resources-to-aggregated-resources</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource>
                                    <directory>${basedir}/src/main/resources</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                            <outputDirectory>${asciidoctor.aggregated-resources-dir}</outputDirectory>
                            <overwrite>true</overwrite>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-css-to-html-output</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource>
                                    <directory>${asciidoctor.aggregated-resources-dir}/css/</directory>
                                </resource>
                            </resources>
                            <outputDirectory>${asciidoctor.base-output-dir}/html_single/css/</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-script-to-html-output</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource>
                                    <directory>${asciidoctor.aggregated-resources-dir}/script/</directory>
                                </resource>
                            </resources>
                            <outputDirectory>${asciidoctor.base-output-dir}/html_single/script/</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-images-to-html-output</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource>
                                    <directory>${asciidoctor.aggregated-resources-dir}/images/</directory>
                                </resource>
                            </resources>
                            <outputDirectory>${asciidoctor.base-output-dir}/html_single/images/</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
                <configuration>
                    <nonFilteredFileExtensions>
                        <nonFilteredFileExtension>ttf</nonFilteredFileExtension>
                    </nonFilteredFileExtensions>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.asciidoctor</groupId>
                <artifactId>asciidoctor-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>output-html</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>process-asciidoc</goal>
                        </goals>
                        <configuration>
                            <backend>html5</backend>
                            <outputDirectory>${asciidoctor.base-output-dir}/html_single</outputDirectory>
                            <attributes>
                                <imagesdir>images/</imagesdir>
                                <stylesdir>css</stylesdir>
                                <iconfont-remote>false</iconfont-remote>
                                <iconfont-name>font-awesome/css/font-awesome.min</iconfont-name>
                                <source-highlighter>prettify</source-highlighter>
                            </attributes>
                        </configuration>
                    </execution>
                </executions>
                <configuration>
                    <extensions>
                        <extension>
                            <className>org.hibernate.infra.asciidoctor.extensions.customnumbering.CustomNumberingProcessor</className>
                        </extension>
                        <extension>
                            <className>org.hibernate.infra.asciidoctor.extensions.copytoclipboard.CopyToClipboardProcessor</className>
                        </extension>
                    </extensions>
                    <sourceDocumentName>index.asciidoc</sourceDocumentName>
                    <attributes>
                        <docinfodir>${asciidoctor.aggregated-resources-dir}/docinfo/noorm-documentation</docinfodir>
                        <icons>font</icons>
                        <tabsize>4</tabsize>

                        <sourcedir>${asciidoctor.examples-source-dir}</sourcedir>
                        <resourcesdir>${asciidoctor.examples-resources-dir}</resourcesdir>
                        <engine-sourcedir>${asciidoctor.engine-source-dir}</engine-sourcedir>

                        <hvVersion>${project.version}</hvVersion>
                        <bvVersion>${version.jakarta.validation-api}</bvVersion>
                        <jbossLoggingVersion>${version.org.jboss.logging.jboss-logging}</jbossLoggingVersion>
                        <classmateVersion>${version.com.fasterxml.classmate}</classmateVersion>
                        <expresslyVersion>${version.org.glassfish.expressly}</expresslyVersion>

                        <jdkVersion>${java-version.main.release}</jdkVersion>
                        <compilerPluginVersion>${version.compiler.plugin}</compilerPluginVersion>
                        <versionJakartaPersistence>${parsed-version.jakarta.persistence-api.majorVersion}.${parsed-version.jakarta.persistence-api.minorVersion}</versionJakartaPersistence>

                        <!-- URLs -->
                        <javaApiDocsUrl>${java.api-docs.base-url}/</javaApiDocsUrl>
                        <bvApiDocsUrl>${javadoc.jakarta.validation.url}/</bvApiDocsUrl>
                        <bvSpecUrl>${bv.spec.url}</bvSpecUrl>
                        <javaTechnotesBaseUrl>${java.technotes.base-url}</javaTechnotesBaseUrl>
                        <javafxDocsUrl>${javafx.docs.url}</javafxDocsUrl>
                    </attributes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <descriptors>
                        <descriptor>${basedir}/src/main/assembly/dist.xml</descriptor>
                    </descriptors>
                    <attach>false</attach>
                    <finalName>dist</finalName>
                    <appendAssemblyId>false</appendAssemblyId>
                </configuration>
                <executions>
                    <execution>
                        <id>make-dist</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>documentation-pdf</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <configuration combine.children="append">
                            <descriptors>
                                <descriptor>${basedir}/src/main/assembly/dist.xml</descriptor>
                                <descriptor>${basedir}/src/main/assembly/pdf.xml</descriptor>
                            </descriptors>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.asciidoctor</groupId>
                        <artifactId>asciidoctor-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>output-pdf</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>process-asciidoc</goal>
                                </goals>
                                <configuration>
                                    <backend>pdf</backend>
                                    <outputDirectory>${asciidoctor.base-output-dir}/pdf</outputDirectory>
                                    <attributes>
                                        <imagesdir>${asciidoctor.aggregated-resources-dir}/images/</imagesdir>
                                        <pdf-themesdir>${asciidoctor.aggregated-resources-dir}/theme</pdf-themesdir>
                                        <pdf-theme>hibernate</pdf-theme>
                                        <pdf-fontsdir>${asciidoctor.aggregated-resources-dir}/theme/fonts</pdf-fontsdir>
                                        <pagenums/>
                                        <idprefix/>
                                        <idseparator>-</idseparator>
                                        <source-highlighter>coderay</source-highlighter>
                                    </attributes>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
