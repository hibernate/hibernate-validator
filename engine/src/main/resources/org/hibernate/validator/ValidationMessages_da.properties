jakarta.validation.constraints.AssertFalse.message                   = skal v\u00e6re falsk
jakarta.validation.constraints.AssertTrue.message                    = skal v\u00e6re sand
jakarta.validation.constraints.DecimalMax.message                    = skal v\u00e6re mindre end ${inclusive == true ? 'eller det samme som ' : ''}{value}
jakarta.validation.constraints.DecimalMin.message                    = skal v\u00e6re st\u00f8rre end ${inclusive == true ? 'eller det samme som ' : ''}{value}
jakarta.validation.constraints.Digits.message                        = tal v\u00e6rdierne er udenfor det gyldige omr\u00e5de (<{integer} digits>.<{fraction} digits> forventet)
jakarta.validation.constraints.Email.message                         = skal v\u00e6re en korrekt formateret e-mail-adresse
jakarta.validation.constraints.Future.message                        = skal v\u00e6re en dato i fremtiden
jakarta.validation.constraints.FutureOrPresent.message               = skal v\u00e6re en dato i nutiden eller i fremtiden
jakarta.validation.constraints.Max.message                           = skal v\u00e6re mindre end eller lig med {value}
jakarta.validation.constraints.Min.message                           = skal v\u00e6re st\u00f8rre end eller lig med {value}
jakarta.validation.constraints.Negative.message                      = skal v\u00e6re mindre end 0
jakarta.validation.constraints.NegativeOrZero.message                = skal v\u00e6re mindre end eller lig med 0
jakarta.validation.constraints.NotBlank.message                      = m\u00e5 ikke v\u00e6re blank
jakarta.validation.constraints.NotEmpty.message                      = m\u00e5 ikke v\u00e6re tom
jakarta.validation.constraints.NotNull.message                       = m\u00e5 ikke v\u00e6re null
jakarta.validation.constraints.Null.message                          = skal v\u00e6re null
jakarta.validation.constraints.Past.message                          = skal v\u00e6re en dato fortiden
jakarta.validation.constraints.PastOrPresent.message                 = skal v\u00e6re en dato i fortiden eller i nutiden
jakarta.validation.constraints.Pattern.message                       = skal matche "{regexp}"
jakarta.validation.constraints.Positive.message                      = skal v\u00e6re st\u00f8rre end 0
jakarta.validation.constraints.PositiveOrZero.message                = skal v\u00e6re st\u00f8rre end eller lig med 0
jakarta.validation.constraints.Size.message                          = st\u00f8rrelse skal v\u00e6re mellem {min} og {max}

org.hibernate.validator.constraints.CreditCardNumber.message       = ugyldigt kreditkortnummer
org.hibernate.validator.constraints.Currency.message               = ugyldig valuta (skal v\u00e6re en af {value})
org.hibernate.validator.constraints.EAN.message                    = ugyldig {type} stregkode
org.hibernate.validator.constraints.Email.message                  = ikke en velformuleret email adresse
org.hibernate.validator.constraints.ISBN.message                   = ugyldigt ISBN
org.hibernate.validator.constraints.Length.message                 = l\u00e6ngden skal v\u00e6re mellem {min} og {max}
org.hibernate.validator.constraints.CodePointLength.message        = l\u00e6ngden skal v\u00e6re mellem {min} og {max}
org.hibernate.validator.constraints.LuhnCheck.message              = kontrolcifferet for ${validatedValue} er ugyldigt, Luhn Modulo 10 checksum mislykkedes
org.hibernate.validator.constraints.Mod10Check.message             = kontrolcifferet for ${validatedValue} er ugyldigt, Modulo 10 checksum mislykkedes
org.hibernate.validator.constraints.Mod11Check.message             = kontrolcifferet for ${validatedValue} er ugyldigt, Modulo 11 checksum mislykkedes
org.hibernate.validator.constraints.ModCheck.message               = kontrolcifferet for ${validatedValue} er ugyldigt, {modType} checksummet mislykkedes
org.hibernate.validator.constraints.NotBlank.message               = m\u00e5 ikke v\u00e6re tomt
org.hibernate.validator.constraints.NotEmpty.message               = m\u00e5 ikke v\u00e6re tomt
org.hibernate.validator.constraints.ParametersScriptAssert.message = script udtryk "{script}" evaluerede ikke til true
org.hibernate.validator.constraints.Range.message                  = skal v\u00e6re mellem {min} og {max}
org.hibernate.validator.constraints.ScriptAssert.message           = script udtryk "{script}" evaluerede ikke til true
org.hibernate.validator.constraints.UniqueElements.message         = m\u00e5 kun indeholde unikke elementer
org.hibernate.validator.constraints.URL.message                    = skal v\u00e6re en gyldig webadresse
org.hibernate.validator.constraints.UUID.message                   = skal v\u00e6re en gyldig UUID

org.hibernate.validator.constraints.br.CNPJ.message                = ugyldigt brasiliansk selskabsskattem\u00e6ssige registreringsnummer (CNPJ)
org.hibernate.validator.constraints.br.CPF.message                 = ugyldigt brasiliansk enkeltregistratornummer (CPF)
org.hibernate.validator.constraints.br.TituloEleitoral.message     = Ugyldigt brasiliansk Voter ID-kortnummer

org.hibernate.validator.constraints.pl.REGON.message               = ugyldigt polsk skattebetalers identifikationsnummer (REGON)
org.hibernate.validator.constraints.pl.NIP.message                 = ugyldigt momsidentifikationsnummer (NIP)
org.hibernate.validator.constraints.pl.PESEL.message               = ugyldigt polsk nationalt identifikationsnummer (PESEL)

org.hibernate.validator.constraints.ru.INN.message                 = ugyldigt russisk skattebetalers identifikationsnummer (INN)

org.hibernate.validator.constraints.time.DurationMax.message       = skal v\u00e6re kortere end${inclusive == true ? ' eller lig med' : ''}${days == 0 ? '' : days == 1 ? ' 1 dag' : ' ' += days += ' dage'}${hours == 0 ? '' : hours == 1 ? ' 1 time' : ' ' += hours += ' timer'}${minutes == 0 ? '' : minutes == 1 ? ' 1 minut' : ' ' += minutes += ' minutter'}${seconds == 0 ? '' : seconds == 1 ? ' 1 sekund' : ' ' += seconds += ' sekunder'}${millis == 0 ? '' : millis == 1 ? ' 1 millisekund' : ' ' += millis += ' millisekunder'}${nanos == 0 ? '' : nanos == 1 ? ' 1 nanosekund' : ' ' += nanos += ' nanosekunder'}
org.hibernate.validator.constraints.time.DurationMin.message       = skal v\u00e6re l\u00e6ngere end${inclusive == true ? ' eller lig med' : ''}${days == 0 ? '' : days == 1 ? ' 1 dag' : ' ' += days += ' dage'}${hours == 0 ? '' : hours == 1 ? ' 1 time' : ' ' += hours += ' timer'}${minutes == 0 ? '' : minutes == 1 ? ' 1 minut' : ' ' += minutes += ' minutter'}${seconds == 0 ? '' : seconds == 1 ? ' 1 sekund' : ' ' += seconds += ' sekunder'}${millis == 0 ? '' : millis == 1 ? ' 1 millisekund' : ' ' += millis += ' millisekunder'}${nanos == 0 ? '' : nanos == 1 ? ' 1 nanosekund' : ' ' += nanos += ' nanosekunder'}
