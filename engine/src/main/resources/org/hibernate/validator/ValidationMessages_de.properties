jakarta.validation.constraints.AssertFalse.message     = muss falsch sein
jakarta.validation.constraints.AssertTrue.message      = muss wahr sein
jakarta.validation.constraints.DecimalMax.message      = muss kleiner ${inclusive == true ? 'oder gleich ' : ''}{value} sein
jakarta.validation.constraints.DecimalMin.message      = muss gr\u00f6\u00dfer ${inclusive == true ? 'oder gleich ' : ''}{value} sein
jakarta.validation.constraints.Digits.message          = numerischer Wert au\u00dferhalb des g\u00fcltigen Bereichs (<{integer} digits>.<{fraction} digits> erwartet)
jakarta.validation.constraints.Email.message           = muss eine korrekt formatierte E-Mail-Adresse sein
jakarta.validation.constraints.Future.message          = muss ein Datum in der Zukunft sein
jakarta.validation.constraints.FutureOrPresent.message = muss ein Datum in der Gegenwart oder in der Zukunft sein
jakarta.validation.constraints.Max.message             = muss kleiner-gleich {value} sein
jakarta.validation.constraints.Min.message             = muss gr\u00f6\u00dfer-gleich {value} sein
jakarta.validation.constraints.Negative.message        = muss kleiner als 0 sein
jakarta.validation.constraints.NegativeOrZero.message  = muss kleiner-gleich 0 sein
jakarta.validation.constraints.NotBlank.message        = darf nicht leer sein
jakarta.validation.constraints.NotEmpty.message        = darf nicht leer sein
jakarta.validation.constraints.NotNull.message         = darf nicht null sein
jakarta.validation.constraints.Null.message            = muss null sein
jakarta.validation.constraints.Past.message            = muss ein Datum in der Vergangenheit sein
jakarta.validation.constraints.PastOrPresent.message   = muss ein Datum in der Vergangenheit oder in der Gegenwart sein
jakarta.validation.constraints.Pattern.message         = muss mit "{regexp}" \u00fcbereinstimmen
jakarta.validation.constraints.Positive.message        = muss gr\u00f6\u00dfer als 0 sein
jakarta.validation.constraints.PositiveOrZero.message  = muss gr\u00f6\u00dfer-gleich 0 sein
jakarta.validation.constraints.Size.message            = Gr\u00f6\u00dfe muss zwischen {min} und {max} sein

org.hibernate.validator.constraints.CreditCardNumber.message        = ung\u00fcltige Kreditkartennummer
org.hibernate.validator.constraints.Currency.message                = ung\u00fcltige W\u00e4hrung (muss eine der folgenden sein: {value})
org.hibernate.validator.constraints.EAN.message                     = ung\u00fcltiger {type}-Barcode
org.hibernate.validator.constraints.Email.message                   = muss eine korrekt formatierte E-Mail-Adresse sein
org.hibernate.validator.constraints.ISBN.message                    = ung\u00fcltige ISBN
org.hibernate.validator.constraints.Length.message                  = L\u00e4nge muss zwischen {min} und {max} sein
org.hibernate.validator.constraints.CodePointLength.message         = L\u00e4nge muss zwischen {min} und {max} sein
org.hibernate.validator.constraints.LuhnCheck.message               = die Pr\u00fcfziffer f\u00fcr ${validatedValue} ist ung\u00fcltig, Luhn Modulo 10-Kontrollsumme ist fehlgeschlagen
org.hibernate.validator.constraints.Mod10Check.message              = die Pr\u00fcfziffer f\u00fcr ${validatedValue} ist ung\u00fcltig, Modulo 10-Kontrollsumme ist fehlgeschlagen
org.hibernate.validator.constraints.Mod11Check.message              = die Pr\u00fcfziffer f\u00fcr ${validatedValue} ist ung\u00fcltig, Modulo 11-Kontrollsumme ist fehlgeschlagen
org.hibernate.validator.constraints.ModCheck.message                = die Pr\u00fcfziffer f\u00fcr ${validatedValue} ist ung\u00fcltig, {modType}-Kontrollsumme ist fehlgeschlagen
org.hibernate.validator.constraints.NotBlank.message                = darf nicht leer sein
org.hibernate.validator.constraints.NotEmpty.message                = darf nicht leer sein
org.hibernate.validator.constraints.ParametersScriptAssert.message  = die Evaluierung des Scriptausdrucks "{script}" ergab nicht true
org.hibernate.validator.constraints.Range.message                   = muss zwischen {min} und {max} sein
org.hibernate.validator.constraints.ScriptAssert.message            = die Evaluierung des Scriptausdrucks "{script}" ergab nicht true
org.hibernate.validator.constraints.UniqueElements.message          = darf nur eindeutige Elemente enthalten
org.hibernate.validator.constraints.URL.message                     = muss eine g\u00fcltige URL sein
org.hibernate.validator.constraints.UUID.message                    = muss eine g\u00fcltige UUID sein

org.hibernate.validator.constraints.br.CNPJ.message                 = ung\u00fcltige brasilianische Registriernummer f\u00fcr K\u00f6rperschaftssteuerzahlungen (CNPJ)
org.hibernate.validator.constraints.br.CPF.message                  = ung\u00fcltige brasilianische Registriernummer f\u00fcr Steuerzahlungen nat\u00fcrlicher Personen (CPF)
org.hibernate.validator.constraints.br.TituloEleitoral.message      = ung\u00fcltige brasilianische ID-Karte f\u00fcr Entscheidungsberechtigte

org.hibernate.validator.constraints.pl.REGON.message                = ung\u00fcltige polnische Steuerzahleridentifikationsnummer (REGON)
org.hibernate.validator.constraints.pl.NIP.message                  = ung\u00fcltige Mehrwertsteueridentifikationsnummer (NIP)
org.hibernate.validator.constraints.pl.PESEL.message                = ung\u00fcltige polnische nationale Identifikationsnummer (PESEL)

org.hibernate.validator.constraints.ru.INN.message                  = ung\u00fcltige russisch Steuerzahleridentifikationsnummer (INN)

org.hibernate.validator.constraints.time.DurationMax.message        = muss k\u00fcrzer sein als${inclusive == true ? ' oder gleich' : ''}${days == 0 ? '' : days == 1 ? ' 1 Tag' : ' ' += days += ' Tage'}${hours == 0 ? '' : hours == 1 ? ' 1 Stunde' : ' ' += hours += ' Stunden'}${minutes == 0 ? '' : minutes == 1 ? ' 1 Minute' : ' ' += minutes += ' Minuten'}${seconds == 0 ? '' : seconds == 1 ? ' 1 Sekunde' : ' ' += seconds += ' Sekunden'}${millis == 0 ? '' : millis == 1 ? ' 1 Millisekunde' : ' ' += millis += ' Millisekunden'}${nanos == 0 ? '' : nanos == 1 ? ' 1 Nanosekunde' : ' ' += nanos += ' Nanosekunden'}
org.hibernate.validator.constraints.time.DurationMin.message        = muss gr\u00f6\u00dfer sein als${inclusive == true ? ' oder gleich' : ''}${days == 0 ? '' : days == 1 ? ' 1 Tag' : ' ' += days += ' Tage'}${hours == 0 ? '' : hours == 1 ? ' 1 Stunde' : ' ' += hours += ' Stunden'}${minutes == 0 ? '' : minutes == 1 ? ' 1 Minute' : ' ' += minutes += ' Minuten'}${seconds == 0 ? '' : seconds == 1 ? ' 1 Sekunde' : ' ' += seconds += ' Sekunden'}${millis == 0 ? '' : millis == 1 ? ' 1 Millisekunde' : ' ' += millis += ' Millisekunden'}${nanos == 0 ? '' : nanos == 1 ? ' 1 Nanosekunde' : ' ' += nanos += ' Nanosekunden'}
