jakarta.validation.constraints.AssertFalse.message     = musi mie\u0107 warto\u015b\u0107 false
jakarta.validation.constraints.AssertTrue.message      = musi mie\u0107 warto\u015b\u0107 true
jakarta.validation.constraints.DecimalMax.message      = musi by\u0107 ${inclusive == true ? 'r\u00f3wne lub ' : ''}mniejsze od {value}
jakarta.validation.constraints.DecimalMin.message      = musi by\u0107 ${inclusive == true ? 'r\u00f3wne lub ' : ''}wi\u0119ksze od {value}
jakarta.validation.constraints.Digits.message          = warto\u015b\u0107 liczbowa spoza zakresu (oczekiwano <liczba cyfr: {integer}>,<liczba cyfr: {fraction}>)
jakarta.validation.constraints.Email.message           = musi by\u0107 poprawnie sformatowanym adresem e-mail
jakarta.validation.constraints.Future.message          = musi by\u0107 dat\u0105 w przysz\u0142o\u015bci
jakarta.validation.constraints.FutureOrPresent.message = musi by\u0107 dat\u0105 bie\u017c\u0105c\u0105 lub w przysz\u0142o\u015bci
jakarta.validation.constraints.Max.message             = musi by\u0107 r\u00f3wne lub mniejsze od {value}
jakarta.validation.constraints.Min.message             = musi by\u0107 r\u00f3wne lub wi\u0119ksze od {value}
jakarta.validation.constraints.Negative.message        = musi by\u0107 mniejsze od 0
jakarta.validation.constraints.NegativeOrZero.message  = musi by\u0107 r\u00f3wne lub mniejsze od 0
jakarta.validation.constraints.NotBlank.message        = nie mo\u017ce by\u0107 odst\u0119pem
jakarta.validation.constraints.NotEmpty.message        = nie mo\u017ce by\u0107 puste
jakarta.validation.constraints.NotNull.message         = nie mo\u017ce mie\u0107 warto\u015bci null
jakarta.validation.constraints.Null.message            = musi mie\u0107 warto\u015b\u0107 null
jakarta.validation.constraints.Past.message            = musi by\u0107 dat\u0105 w przesz\u0142o\u015bci
jakarta.validation.constraints.PastOrPresent.message   = musi by\u0107 dat\u0105 bie\u017c\u0105c\u0105 lub w przesz\u0142o\u015bci
jakarta.validation.constraints.Pattern.message         = musi pasowa\u0107 do wyra\u017cenia {regexp}
jakarta.validation.constraints.Positive.message        = musi by\u0107 wi\u0119ksze od 0
jakarta.validation.constraints.PositiveOrZero.message  = musi by\u0107 r\u00f3wne lub wi\u0119ksze od 0
jakarta.validation.constraints.Size.message            = wielko\u015b\u0107 musi nale\u017ce\u0107 do zakresu od {min} do {max}

org.hibernate.validator.constraints.CreditCardNumber.message        = niepoprawny numer karty kredytowej
org.hibernate.validator.constraints.Currency.message                = niepoprawna waluta (musi by\u0107 jedn\u0105 z nast\u0119puj\u0105cych: {value})
org.hibernate.validator.constraints.EAN.message                     = niepoprawny kod paskowy {type}
org.hibernate.validator.constraints.Email.message                   = musi by\u0107 poprawnie sformatowanym adresem e-mail
org.hibernate.validator.constraints.ISBN.message                    = niepoprawny numer ISBN
org.hibernate.validator.constraints.Length.message                  = d\u0142ugo\u015b\u0107 musi wynosi\u0107 od {min} do {max}
org.hibernate.validator.constraints.CodePointLength.message         = d\u0142ugo\u015b\u0107 musi wynosi\u0107 od {min} do {max}
org.hibernate.validator.constraints.LuhnCheck.message               = cyfra kontrolna dla warto\u015bci ${validatedValue} jest niepoprawna, sprawdzenie sumy kontrolnej za pomoc\u0105 algorytmu Luhn Modulo 10 nie powiod\u0142o si\u0119
org.hibernate.validator.constraints.Mod10Check.message              = cyfra kontrolna dla warto\u015bci ${validatedValue} jest niepoprawna, sprawdzenie sumy kontrolnej za pomoc\u0105 algorytmu Modulo 10 nie powiod\u0142o si\u0119
org.hibernate.validator.constraints.Mod11Check.message              = cyfra kontrolna dla warto\u015bci ${validatedValue} jest niepoprawna, sprawdzenie sumy kontrolnej za pomoc\u0105 algorytmu Modulo 11 nie powiod\u0142o si\u0119
org.hibernate.validator.constraints.ModCheck.message                = cyfra kontrolna dla warto\u015bci ${validatedValue} jest niepoprawna, sprawdzenie sumy kontrolnej za pomoc\u0105 algorytmu {modType} nie powiod\u0142o si\u0119
org.hibernate.validator.constraints.NotBlank.message                = nie mo\u017ce by\u0107 odst\u0119pem
org.hibernate.validator.constraints.NotEmpty.message                = nie mo\u017ce by\u0107 puste
org.hibernate.validator.constraints.ParametersScriptAssert.message  = warto\u015bciowanie wyra\u017cenia skryptu {script} nie zwr\u00f3ci\u0142o warto\u015bci true
org.hibernate.validator.constraints.Range.message                   = musi nale\u017ce\u0107 do zakresu od {min} do {max}
org.hibernate.validator.constraints.ScriptAssert.message            = warto\u015bciowanie wyra\u017cenia skryptu {script} nie zwr\u00f3ci\u0142o warto\u015bci true
org.hibernate.validator.constraints.UniqueElements.message          = musi zawiera\u0107 tylko unikalne elementy
org.hibernate.validator.constraints.URL.message                     = musi by\u0107 poprawnym adresem URL
org.hibernate.validator.constraints.UUID.message                    = musi by\u0107 poprawnym UUID

org.hibernate.validator.constraints.br.CNPJ.message                 = niepoprawny numer brazylijskiego rejestru podatkowego os\u00f3b prawnych (CNPJ)
org.hibernate.validator.constraints.br.CPF.message                  = niepoprawny numer brazylijskiego rejestru podatkowego os\u00f3b fizycznych (CPF)
org.hibernate.validator.constraints.br.TituloEleitoral.message      = niepoprawny numer brazylijskiej karty identyfikacyjnej g\u0142osuj\u0105cego

org.hibernate.validator.constraints.pl.REGON.message                = niepoprawny numer identyfikacyjny polskiego podatnika (REGON)
org.hibernate.validator.constraints.pl.NIP.message                  = niepoprawny number identyfikacyjny VAT (NIP)
org.hibernate.validator.constraints.pl.PESEL.message                = niepoprawny polski narodowy numer identyfikacyjny (PESEL)

org.hibernate.validator.constraints.ru.INN.message                  = niepoprawny numer identyfikacyjny rosyjskiego podatnika (INN)

org.hibernate.validator.constraints.time.DurationMax.message        = musi by\u0107 ${inclusive == true ? 'r\u00f3wne lub ' : ''}kr\u00f3tsze ni\u017c${days == 0 ? '' : days == 1 ? ' 1 dzie\u0144' : ' ' += days += ' dni'}${hours == 0 ? '' : hours == 1 ? ' 1 godzina' : ' ' += hours += ' godz.'}${minutes == 0 ? '' : minutes == 1 ? ' 1 minuta' : ' ' += minutes += ' min'}${seconds == 0 ? '' : seconds == 1 ? ' 1 sekunda' : ' ' += seconds += ' s'}${millis == 0 ? '' : millis == 1 ? ' 1 milisekunda' : ' ' += millis += ' ms'}${nanos == 0 ? '' : nanos == 1 ? ' 1 nanosekunda' : ' ' += nanos += ' ns'}
org.hibernate.validator.constraints.time.DurationMin.message        = musi by\u0107 ${inclusive == true ? 'r\u00f3wne lub ' : ''}d\u0142u\u017csze ni\u017c${days == 0 ? '' : days == 1 ? ' 1 dzie\u0144' : ' ' += days += ' dni'}${hours == 0 ? '' : hours == 1 ? ' 1 godzina' : ' ' += hours += ' godz.'}${minutes == 0 ? '' : minutes == 1 ? ' 1 minuta' : ' ' += minutes += ' min'}${seconds == 0 ? '' : seconds == 1 ? ' 1 sekunda' : ' ' += seconds += ' s'}${millis == 0 ? '' : millis == 1 ? ' 1 milisekunda' : ' ' += millis += ' ms'}${nanos == 0 ? '' : nanos == 1 ? ' 1 nanosekunda' : ' ' += nanos += ' ns'}
