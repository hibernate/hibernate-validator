/**
 * Policy file for running the Bean Validation TCK within a security manager.
 *
 * The goal if this is to make sure that all SM-relevant APIs are invoked by Hibernate Validator using privileged
 * actions so it can be used within an SM enabled, only giving the required permissions to Hibernate Validator but not
 * other code which uses it.
 *
 * For that purpose this test set up puts one frame onto the call stack (via {@code DelegatingExecutor}) whose
 * protection domain (target/classes) has no permissions assigned at all. That way any missing privileged actions in
 * Hibernate Validator would lead to an access control exception. All the other domains involved in tests (e.g.
 * Arquillian or TestNG) are assigned with "all permissions" to keep this set-up manageable. As the privilege-less
 * DelegatingExecutor frame is located in the stack very close to the actual code under test, it is ensured that
 * any possible privileged blocks within these domains will not conceal any missing privileged blocks in Hibernate
 * Validator (only one Arquillian class and the BV TCK domain are located in between and both don't use any privileged
 * actions).
 */

/* =============================================== */
/* Hibernate Validator engine and its dependencies */
/* =============================================== */

// Used during builds which obtain "engine" from the local repo, e.g. mvn clean install -pl tck-runner

// replace with this when debugging in the IDE with workspace resolution
// grant codeBase "file:/<project-dir>/engine/target/classes/" {
grant codeBase "file:${localRepository}/org/hibernate/hibernate-validator/${project.version}/hibernate-validator-${project.version}.jar" {
    permission java.lang.reflect.ReflectPermission "suppressAccessChecks";
    permission java.lang.RuntimePermission "accessDeclaredMembers";

    // JAXB
    permission java.lang.RuntimePermission "accessClassInPackage.com.sun.xml.internal.bind.*";
    permission java.util.PropertyPermission "com.sun.xml.internal.bind.*", "read";
    permission java.util.PropertyPermission "mapAnyUriToUri", "read";
};

// Used during aggregator builds also building "engine", e.g. mvn clean install -pl tck-runner -am

grant codeBase "file:${basedir}/../engine/target/hibernate-validator-${project.version}.jar" {
    permission java.lang.reflect.ReflectPermission "suppressAccessChecks";
    permission java.lang.RuntimePermission "accessDeclaredMembers";

    // JAXB
    permission java.lang.RuntimePermission "accessClassInPackage.com.sun.xml.internal.bind.*";
    permission java.util.PropertyPermission "com.sun.xml.internal.bind.*", "read";
    permission java.util.PropertyPermission "mapAnyUriToUri", "read";
};

grant codeBase "file:${localRepository}/com/fasterxml/classmate/${classmate.version}/classmate-${classmate.version}.jar" {
    permission java.lang.RuntimePermission "accessDeclaredMembers";
};

grant codeBase "file:${localRepository}/org/jboss/logging/jboss-logging/3.1.3.GA/jboss-logging-3.1.3.GA.jar" {
    permission java.util.PropertyPermission "org.jboss.logging.provider", "read";
};

/* =================== */
/* Bean Validation API */
/* =================== */

grant codeBase "file:${localRepository}/javax/validation/validation-api/${bv.api.version}/validation-api-${bv.api.version}.jar" {
    permission java.io.FilePermission "<<ALL FILES>>", "read";
};

/* =================== */
/* Bean Validation TCK */
/* =================== */

grant codeBase "file:${localRepository}/org/hibernate/beanvalidation/tck/beanvalidation-tck-tests/${tck.version}/beanvalidation-tck-tests-${tck.version}.jar" {
    permission java.security.AllPermission;
};

grant codeBase "file:${localRepository}/org/hibernate/beanvalidation/tck/beanvalidation-standalone-container-adapter/${tck.version}/beanvalidation-standalone-container-adapter-${tck.version}.jar" {
    permission java.security.AllPermission;
};

/* ========== */
/* TCK Runner */
/* ========== */

// Ideally, this domain should have no permissions at all; Only specifically enabling some API calls done by the BV TCK
// tests (which do not use privileged actions for these)
grant codeBase "file:${project.build.directory}/classes" {
    permission java.util.PropertyPermission "validation.provider", "read";
    permission java.io.FilePermission "${localRepository}/org/hibernate/beanvalidation/tck/beanvalidation-tck-tests/${tck.version}/beanvalidation-tck-tests-${tck.version}.jar", "read";
    permission java.util.PropertyPermission "user.language", "write";
};

grant codeBase "file:${project.build.directory}/test-classes" {
    permission java.security.AllPermission;
};

/* ===================== */
/* Arquillian/ShrinkWrap */
/* ===================== */

grant codeBase "file:${localRepository}/org/jboss/arquillian/test/arquillian-test-spi/${arquillian.version}/arquillian-test-spi-${arquillian.version}.jar" {
    permission java.security.AllPermission;
};

grant codeBase "file:${localRepository}/org/jboss/arquillian/testng/arquillian-testng-core/${arquillian.version}/arquillian-testng-core-${arquillian.version}.jar" {
    permission java.security.AllPermission;
};

grant codeBase "file:${localRepository}/org/jboss/arquillian/core/arquillian-core-spi/${arquillian.version}/arquillian-core-spi-${arquillian.version}.jar" {
    permission java.security.AllPermission;
};

grant codeBase "file:${localRepository}/org/jboss/arquillian/test/arquillian-test-impl-base/${arquillian.version}/arquillian-test-impl-base-${arquillian.version}.jar" {
    permission java.security.AllPermission;
};

grant codeBase "file:${localRepository}/org/jboss/arquillian/core/arquillian-core-impl-base/${arquillian.version}/arquillian-core-impl-base-${arquillian.version}.jar" {
    permission java.security.AllPermission;
};

grant codeBase "file:${localRepository}/org/jboss/arquillian/config/arquillian-config-impl-base/${arquillian.version}/arquillian-config-impl-base-${arquillian.version}.jar" {
    permission java.security.AllPermission;
};

grant codeBase "file:${localRepository}/org/jboss/arquillian/config/arquillian-config-impl-base/${arquillian.version}/arquillian-config-impl-base-${arquillian.version}.jar" {
    permission java.security.AllPermission;
};

grant codeBase "file:${localRepository}/org/jboss/arquillian/container/arquillian-container-test-impl-base/${arquillian.version}/arquillian-container-test-impl-base-${arquillian.version}.jar" {
    permission java.security.AllPermission;
};

grant codeBase "file:${localRepository}/org/jboss/arquillian/container/arquillian-container-impl-base/${arquillian.version}/arquillian-container-impl-base-${arquillian.version}.jar" {
    permission java.security.AllPermission;
};

grant codeBase "file:${localRepository}/org/jboss/arquillian/testng/arquillian-testng-container/${arquillian.version}/arquillian-testng-container-${arquillian.version}.jar" {
    permission java.security.AllPermission;
};

grant codeBase "file:${localRepository}/org/jboss/arquillian/container/arquillian-container-test-spi/${arquillian.version}/arquillian-container-test-spi-${arquillian.version}.jar" {
    permission java.security.AllPermission;
};

grant codeBase "file:${localRepository}/org/jboss/shrinkwrap/descriptors/shrinkwrap-descriptors-api-base/2.0.0-alpha-3/shrinkwrap-descriptors-api-base-2.0.0-alpha-3.jar" {
    permission java.security.AllPermission;
};

grant codeBase "file:${localRepository}/org/jboss/shrinkwrap/shrinkwrap-api/1.0.1/shrinkwrap-api-1.0.1.jar" {
    permission java.security.AllPermission;
};

grant codeBase "file:${localRepository}/org/jboss/shrinkwrap/shrinkwrap-impl-base/1.0.1/shrinkwrap-impl-base-1.0.1.jar" {
    permission java.security.AllPermission;
};

/* ======= */
/* TestNG  */
/* ======= */

grant codeBase "file:${localRepository}/org/testng/testng/6.8/testng-6.8.jar" {
    permission java.security.AllPermission;
};

// Dependency of TestNG
grant codeBase "file:${localRepository}/org/beanshell/bsh/2.0b4/bsh-2.0b4.jar" {
    permission java.security.AllPermission;
};

/* ========= */
/* Surefire  */
/* ========= */

grant codeBase "file:${localRepository}/org/apache/maven/surefire/surefire-booter/2.15/surefire-booter-2.15.jar" {
    permission java.security.AllPermission;
};

grant codeBase "file:${localRepository}/org/apache/maven/surefire/surefire-testng/2.15/surefire-testng-2.15.jar" {
    permission java.security.AllPermission;
};

grant codeBase "file:${localRepository}/org/apache/maven/surefire/surefire-api/2.15/surefire-api-2.15.jar" {
    permission java.security.AllPermission;
};
